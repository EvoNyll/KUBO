// Mocks generated by Mockito 5.1.0 from annotations
// in kubo/test/features/food_planner/data/repositories/recipe_schedule_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:collection' as _i3;
import 'dart:ui' as _i6;

import 'package:kubo/features/food_planner/data/datasources/recipe_schedule_local_data_source.dart'
    as _i4;
import 'package:kubo/features/food_planner/data/models/recipe_schedule_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRecipeScheduleModel_0 extends _i1.Fake
    implements _i2.RecipeScheduleModel {}

class _FakeLinkedHashMap_1<K, V> extends _i1.Fake
    implements _i3.LinkedHashMap<K, V> {}

/// A class which mocks [RecipeScheduleLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipeScheduleLocalDataSource extends _i1.Mock
    implements _i4.RecipeScheduleLocalDataSource {
  MockRecipeScheduleLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.RecipeScheduleModel> createRecipeSchedule(
          {String? id,
          String? name,
          String? description,
          String? imageUrl,
          DateTime? start,
          DateTime? end,
          _i6.Color? color,
          bool? isAllDay}) =>
      (super.noSuchMethod(
              Invocation.method(#createRecipeSchedule, [], {
                #id: id,
                #name: name,
                #description: description,
                #imageUrl: imageUrl,
                #start: start,
                #end: end,
                #color: color,
                #isAllDay: isAllDay
              }),
              returnValue: Future<_i2.RecipeScheduleModel>.value(
                  _FakeRecipeScheduleModel_0()))
          as _i5.Future<_i2.RecipeScheduleModel>);
  @override
  _i5.Future<List<_i2.RecipeScheduleModel>> fetchRecipeScheduleList() =>
      (super.noSuchMethod(Invocation.method(#fetchRecipeScheduleList, []),
              returnValue: Future<List<_i2.RecipeScheduleModel>>.value(
                  <_i2.RecipeScheduleModel>[]))
          as _i5.Future<List<_i2.RecipeScheduleModel>>);
  @override
  _i5.Future<_i3.LinkedHashMap<DateTime, List<_i2.RecipeScheduleModel>>>
      fetchRecipeScheduleLinkedHashmap() => (super.noSuchMethod(
          Invocation.method(#fetchRecipeScheduleLinkedHashmap, []),
          returnValue:
              Future<_i3.LinkedHashMap<DateTime, List<_i2.RecipeScheduleModel>>>.value(
                  _FakeLinkedHashMap_1<DateTime,
                      List<_i2.RecipeScheduleModel>>())) as _i5
          .Future<_i3.LinkedHashMap<DateTime, List<_i2.RecipeScheduleModel>>>);
}
